;为PIO编写的工程连接文件，Inc改文件直接新建就行
;Tony_Wang 2023-3-2

[platformio]
src_dir = ./               ; 项目源文件为根目录下所有源文件

[env:genericSTM32F405RG]   ; 项目的环境名，自定义即可
platform = ststm32         ; 硬件平台为stm32
board = genericSTM32F405RG      ; 选择一款对应芯片的开发板即可
; framework = stm32cube
upload_port = stlink       ; 下载工具为stlink
upload_protocol = stlink   ; 下载协议为stlink
debug_tool = stlink        ; 调试工具为stlink，目前这个还没有通过

build_type = debug    ;注意这个使能了，下面配置优化等级就无效了，调试时候0级优化肯定是最稳妥的
monitor_speed = 115200


; 使用build_flags将生成的驱动文件包含到编译条件中，-D表示宏定义，-I表示头文件路径。
; 使用src_filter过滤需要的源文件，+<path>表示增加某个路径，-<path>表示排除某个路径。
; 使用board_build.ldscript指定编译时的链接文件。
build_flags = 
    -std=c++11  ;cpp混合编译添加cpp11特性
    ; -O0 ;-OX(X:0,1,2,3)  ; 配置优化等级
    ;这里两个不清楚具体指代什么地方
    -DSTM32F405xx
    -DUSE_HAL_DRIVER
    ;下面是全部工程的头文件路径，新的头文集在这里添加路径
    -Icubemx/Core/Inc
    -Icubemx/Drivers/CMSIS/Include
    -Icubemx/Drivers/CMSIS/Device/ST/STM32F4xx/Include
    -Icubemx/Drivers/STM32F4xx_HAL_Driver/Inc
    -Icubemx/Drivers/STM32F4xx_HAL_Driver/Inc/Legacy
    -Icubemx/User_Code
    -Icubemx/User_Code/dep
	-Icubemx/User_Code/bsp
	-Icubemx/User_Code/app
	-Icubemx/User_Code/task
    ; 开启 硬件 fpu  
    -mthumb -mcpu=cortex-m4 -march=armv7e-m -mfloat-abi=hard -mfpu=fpv4-sp-d16      ;单独添加这个pio有bug
; 所以需要下面这个，并且添加 py 代码
extra_scripts = update_link_flags.py
build_src_filter =  
    +<cubemx/Core/Src/> 
    +<cubemx/startup_stm32f405xx.s> 
    +<cubemx/Drivers/STM32F4xx_HAL_Driver/Src/>     
    +<**/*.c>
	+<**/*.cpp>
board_build.ldscript = cubemx/STM32F405RGTx_FLASH.ld
; !!!!!!!!!!注意名字移动要对，src_filter中的( +<>)一定要一模一样，空格一个不能多一个不能少 
